---
type Status = "apierror" | "error" | "success";

interface Props {
    status: Status;
    injectScript?: string;
    message: string | AuthError;
}

const { status, message, injectScript = undefined } = Astro.props;
---

{
    status === "error" && (
        <div class="card error">
            <p>Error</p>
            <p>{message as string}</p>
        </div>
    )
}

{
    status === "apierror" && (
        <div class="card error">
            <p>Error</p>
            <div>
                <p>{(message as AuthError).error}</p>
                <p>Description: {(message as AuthError).error_description}</p>
                <p>
                    Help: <a href={(message as AuthError).error_uri}>{(message as AuthError).error_uri}</a>
                </p>
            </div>
        </div>
    )
}

{
    status === "success" && (
        <main>
            <div class="card success">
                <p>Success!</p>
                <p>{message as string}</p>
            </div>
        </main>
    )
}

{
    injectScript && (
        <div id="script">
            <Fragment set:html={injectScript} />
        </div>
    )
}

<style>
    .card {
        margin-bottom: 2rem;
        border: 1px solid rgba(var(--accent-light), 25%);
        background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
        padding: 1.5rem;
        border-radius: 8px;
        max-width: 600px;
        word-wrap: break-word;
    }

    .error {
        color: red;
    }

    .success {
        color: green;
    }
</style>
