---
import { OAUTH_CONFIG } from "@/config";

type Status = "apierror" | "error" | "success";

interface Props {
    message: string | AuthError;
    status: Status;
    injectScript: string | undefined;
}

const { message, status, injectScript = undefined } = Astro.props;
---

{
    status === "error" && (
        <div class="status-card error">
            <p class="title">An error occured</p>
            <p>{message as string}</p>
            <p>Tab will close in {OAUTH_CONFIG.error_close / 1000} second(s)...</p>
        </div>
    )
}

{
    status === "apierror" && (
        <div class="status-card error">
            <p class="title">An error occured</p>
            <div class="status-meta">
                <p>{(message as AuthError).error}</p>
                <p>Description: {(message as AuthError).error_description}</p>
                <p>
                    Help: <a href={(message as AuthError).error_uri}>{(message as AuthError).error_uri}</a>
                </p>
            </div>
            <p>Tab will close in {OAUTH_CONFIG.error_close / 1000} second(s)...</p>
        </div>
    )
}

{
    status === "success" && (
        <div class="status-card success">
            <p class="title">Success!</p>
            <p>{message as string}</p>
            <p>Tab will close in {OAUTH_CONFIG.success_close / 1000} seconds...</p>
        </div>
    )
}

{injectScript && <div id="script" set:html={injectScript} />}
